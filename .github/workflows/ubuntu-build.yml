name: Build QRB ROS packages on Ubuntu

on:
  workflow_call:
    inputs:
      dependencies:
        description: 'List of repositories to checkout, e.g. "owner/repo1 owner/repo2"'
        type: string
        required: false
      colcon_args:
        description: 'Colcon build arguments, e.g. --cmake-args -DCMAKE_BUILD_TYPE=Release'
        type: string
        required: false
      ros-distro:
        description: 'ROS2 distribution to use, e.g. humble'
        type: string
        required: false
        default: jazzy
      apt-packages:
        description: 'List of apt packages to install, e.g. "python3-pip python3-rosdep"'
        type: string
        required: false

env:
    ROS_WS: ${{ github.workspace }}/ros2_ws/
    ROS_SRC: ${{ github.workspace }}/ros2_ws/src

jobs:
  ros-build:
    runs-on: [ubuntu-24.04-arm]
    container: ros:jazzy
    steps:
      - name: Update and install extra packages
        run: |
          # Add QCOM PPA
          sudo apt-get update
          sudo apt-get install -y software-properties-common

          sudo add-apt-repository ppa:ubuntu-qcom-iot/qcom-noble-ppa
          sudo add-apt-repository ppa:ubuntu-qcom-iot/qirp

          sudo apt update -y && sudo apt upgrade -y
          sudo apt install -y ${{ inputs.apt-packages }} wget

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          path: ${{ env.ROS_SRC }}/${{ github.event.repository.name }}

      - name: Checkout dependency
        run: |
          for repo in ${{ inputs.dependencies }}; do
            git clone https://github.com/${repo}.git ${ROS_SRC}/${repo#*/} || true
          done

      - name: Check ROS dependency
        run: |
          wget https://raw.githubusercontent.com/qualcomm-qrb-ros/qrb_ros_distro/refs/heads/main/qrb-ros-dep/qcom-distribution.yaml -O ${ROS_WS}/qcom-distribution.yaml
          if [ -f /etc/ros/rosdep/sources.list.d/20-default.list ];then
            echo "yaml file://${ROS_WS}/qcom-distribution.yaml" | sudo tee -a /etc/ros/rosdep/sources.list.d/20-default.list
          fi 
          sudo rosdep update
          sudo rosdep install -y --rosdistro ${{ inputs.ros-distro }} --from-paths ${ROS_SRC} --ignore-src

      - name: Build ROS packages
        shell: bash
        run: |
          cd ${ROS_WS}
          source /opt/ros/jazzy/setup.sh
          colcon build ${{ inputs.colcon_args }}

      - name: Generate Debian packages
        continue-on-error: true
        shell: bash
        run: |
          cd ${ROS_WS}
          mkdir ${ROS_WS}/debian_dir
          export OUTPUT_DIR=${ROS_WS}/debian_dir
          source /opt/ros/jazzy/setup.sh

          for pkg in $(colcon list -t | cut -f2)
          do
            cd ${pkg}

            bloom-generate rosdebian --ros-distro "${{ inputs.ros-distro }}" -i "$(date +%s)"

            # Build package using fakeroot
            fakeroot debian/rules binary -j8

            # Move build result to the output directory
            mv ../*.deb $OUTPUT_DIR
            mv ../*.ddeb $OUTPUT_DIR
            ls -al $OUTPUT_DIR
          done

      - name: Stage build artifacts for publishing
        continue-on-error: true
        run: |
          build_dir=./uploads
          mkdir -p $build_dir

          tar -cvf "${build_dir}/${{ github.event.repository.name }}-ubuntu-artifacts.tar" --transform "s|^${ROS_WS}/||" -C "${ROS_WS}" install build log
          tar -cvf "${build_dir}/${{ github.event.repository.name }}-ubuntu-debs.tar" --transform "s|^${ROS_WS}/||" -C "${ROS_WS}" debian_dir

      - name: Upload private artifacts
        continue-on-error: true
        uses: qualcomm-linux/upload-private-artifact-action@v1
        with:
          path: ./uploads
          fileserver_url: "https://quic-qrt-ros-fileserver-1029608027416.us-central1.run.app"